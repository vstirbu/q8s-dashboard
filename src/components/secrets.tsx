/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/jqfzGIfkzYw
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import {
  CardTitle,
  CardDescription,
  CardHeader,
  CardContent,
  CardFooter,
  Card,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import {
  DialogTrigger,
  DialogTitle,
  DialogDescription,
  DialogHeader,
  DialogFooter,
  DialogContent,
  Dialog,
  DialogClose,
} from "@/components/ui/dialog";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Plus, Trash } from "lucide-react";
import { DownloadButton } from "./DownloadButton";
import { downloadConfig } from "../actions/kubernetes";

export function Secrets() {
  return (
    <Card className="max-w-xl">
      <CardHeader>
        <CardTitle>Secrets</CardTitle>
        <CardDescription>Your secret cluster configurations.</CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="flex items-center space-x-4">
          <div className="flex-1">
            <h3 className="text-lg font-medium tracking-wide">NPM Token</h3>
            <p className="text-sm leading-none opacity-60">
              Token for NPM packages
            </p>
            <p className="text-xs text-gray-500 dark:text-gray-400">
              Created on April 15, 2023
            </p>
          </div>
          <DownloadButton downloadConfig={downloadConfig} />
          <Dialog>
            <DialogTrigger asChild>
              <Button size="sm" variant="destructive">
                <Trash className="h-4 w-4" />
                {/* Delete */}
              </Button>
            </DialogTrigger>
            <DialogContent>
              <DialogHeader>
                <DialogTitle>Delete NPM Token</DialogTitle>
                <DialogDescription>
                  Are you sure you want to delete this NPM token? This action
                  cannot be undone.
                </DialogDescription>
              </DialogHeader>
              <DialogFooter className="flex justify-end gap-2">
                <DialogClose asChild>
                  <Button type="button" variant="outline">
                    Cancel
                  </Button>
                </DialogClose>
                <Button variant="destructive">Delete</Button>
              </DialogFooter>
            </DialogContent>
          </Dialog>
        </div>
      </CardContent>
      <CardFooter>
        <NewSecret />
      </CardFooter>
    </Card>
  );
}

function NewSecret() {
  return (
    <Dialog>
      <DialogTrigger asChild>
        <Button size="sm">
          <Plus className="h-4 w-4 mr-2" />
          New Secret
        </Button>
      </DialogTrigger>
      <DialogContent className="sm:max-w-[425px]">
        <DialogHeader>
          <DialogTitle>Add New Secret</DialogTitle>
          <DialogDescription>
            Enter the details for your new secret token or key.
          </DialogDescription>
        </DialogHeader>
        <div className="grid gap-4 py-4">
          <div className="grid grid-cols-4 items-center gap-4">
            <Label className="text-right" htmlFor="name">
              Name
            </Label>
            <Input
              className="col-span-3"
              id="name"
              placeholder="GitHub Token"
            />
          </div>
          <div className="grid grid-cols-4 items-center gap-4">
            <Label className="text-right" htmlFor="description">
              Description
            </Label>
            <Input
              className="col-span-3"
              id="description"
              placeholder="Access token for GitHub"
            />
          </div>
          {/* <div className="grid grid-cols-4 items-center gap-4">
            <Label className="text-right" htmlFor="created-at">
              Created At
            </Label>
            <Input className="col-span-3" id="created-at" type="date" />
          </div> */}
        </div>
        <DialogFooter className="flex justify-end gap-2">
          <DialogClose asChild>
            <Button type="button" variant="outline">
              Cancel
            </Button>
          </DialogClose>
          <Button type="submit">Save</Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}
